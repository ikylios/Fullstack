{"ast":null,"code":"var _jsxFileName = \"/home/xilxilx/projects/fullstack-kurssi/fullstack/osa8/library-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport { gql, useLazyQuery, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      born \n      bookCount \n    }\n  }\n`;\nconst ALL_BOOKS = gql`\n  query {\n    allBooks {\n      title \n      author \n      published \n    }\n  }\n`;\n\nconst App = () => {\n  _s();\n\n  const result = useQuery(ALL_AUTHORS); //  const [result, setResult] = useQuery(ALL_AUTHORS)\n  //  const [getBooks, resu] = useLazyQuery(ALL_BOOKS)\n\n  const [getBooks, resu] = useLazyQuery(ALL_BOOKS);\n  const [books2, setBooks2] = useState(null);\n  const [page, setPage] = useState('authors');\n\n  const showPage = content => {\n    console.log('in showPage');\n    getBooks();\n    console.log('resu.data4', resu.data);\n    setPage(content);\n  };\n\n  console.log('resu.data', resu.data);\n  console.log('result.data', result.data);\n  useEffect(() => {\n    if (resu.data) {\n      setBooks2(resu.data.allBooks);\n    }\n\n    console.log('resu.data2', resu.data);\n  }, [resu]);\n  console.log('resu.data3', resu.data);\n\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => showPage('authors'),\n        children: \"authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => showPage('books'),\n        children: \"books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => showPage('add'),\n        children: \"add book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Authors, {\n      show: page === 'authors',\n      authors: result.data.allAuthors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Books, {\n      show: page === 'books',\n      books: books2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewBook, {\n      show: page === 'add'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"DdOosYvJwd5YmJbMGBa7h7vlonc=\", false, function () {\n  return [useQuery, useLazyQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/xilxilx/projects/fullstack-kurssi/fullstack/osa8/library-frontend/src/App.js"],"names":["React","useEffect","useState","Authors","Books","NewBook","gql","useLazyQuery","useQuery","ALL_AUTHORS","ALL_BOOKS","App","result","getBooks","resu","books2","setBooks2","page","setPage","showPage","content","console","log","data","allBooks","loading","allAuthors"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport { gql, useLazyQuery, useQuery } from '@apollo/client'\n\nconst ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      born \n      bookCount \n    }\n  }\n`\n\nconst ALL_BOOKS = gql`\n  query {\n    allBooks {\n      title \n      author \n      published \n    }\n  }\n`\n\nconst App = () => {\n  const result = useQuery(ALL_AUTHORS)\n//  const [result, setResult] = useQuery(ALL_AUTHORS)\n//  const [getBooks, resu] = useLazyQuery(ALL_BOOKS)\n  const [getBooks, resu] = useLazyQuery(ALL_BOOKS)\n  const [books2, setBooks2] = useState(null)\n  const [page, setPage] = useState('authors')\n\n  const showPage = (content) => {\n    console.log('in showPage')\n    getBooks()\n    console.log('resu.data4', resu.data)\n    setPage(content)\n  }\n\n  console.log('resu.data', resu.data)\n  console.log('result.data', result.data)\n  \n  useEffect(() => {\n    if (resu.data) {\n      setBooks2(resu.data.allBooks)\n    } \n    console.log('resu.data2', resu.data)\n  }, [resu])\n\n  console.log('resu.data3', resu.data)\n\n  if (result.loading)  {\n    return <div>loading...</div>\n  }\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => showPage('authors')}>authors</button>\n        <button onClick={() => showPage('books')}>books</button>\n        <button onClick={() => showPage('add')}>add book</button>\n      </div>\n\n      <Authors\n        show={page === 'authors'} authors={result.data.allAuthors}\n      />\n\n      <Books\n        show={page === 'books'} books={books2}\n      />\n\n      <NewBook\n        show={page === 'add'}\n      />\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}