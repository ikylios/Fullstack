{"ast":null,"code":"var _jsxFileName = \"/home/xilxilx/projects/fullstack-kurssi/fullstack/osa8/library-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport { gql, useLazyQuery, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      born \n      bookCount \n    }\n  }\n`;\nconst ALL_BOOKS = gql`\n  query {\n    allBooks {\n      title \n      author \n      published \n    }\n  }\n`;\n\nconst App = () => {\n  _s();\n\n  const result = useQuery(ALL_AUTHORS);\n  const [getBooks, rresult] = useLazyQuery(ALL_BOOKS);\n  const [books, setBooks] = useState(null); //  const [result, setResult] = useQuery(ALL_AUTHORS)\n  //  const [getBooks, resu] = useLazyQuery(ALL_BOOKS)\n  //  const [getBooks, books] = useLazyQuery(ALL_BOOKS)\n\n  const [page, setPage] = useState('authors');\n\n  const showPage = content => {\n    //    console.log('in showPage')\n    //    console.log('content:', content)\n    //    console.log('resu.data3', resu.data)\n    setPage(content);\n\n    if (page === 'books') {\n      const boks = getBooks();\n      setBooks(boks.rresult.data.allBooks);\n      console.log(books);\n    } //    console.log('page:', page)\n\n  };\n\n  useEffect(() => {\n    console.log('page ', page);\n  }, [page]);\n  /*    \n      if (resu.data) {\n        setBooks2(resu.data.allBooks)\n        console.log('books2', books2)\n      } \n      console.log('resu.data2', resu.data)\n      console.log('books22', books2)\n    }, [resu])\n  \n    console.log('resu.data1', resu.data)\n    console.log('result.data', result.data)\n    */\n\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => showPage('authors'),\n        children: \"authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => showPage('books'),\n        children: \"books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => showPage('add'),\n        children: \"add book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Authors, {\n      show: page === 'authors',\n      authors: result.data.allAuthors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Books //        show={page === 'books'} books={books.data.allBooks}\n    , {\n      show: page === 'books',\n      books: books\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewBook, {\n      show: page === 'add'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"svTRk5dDJyaXMeat5qBJ4SHBgNg=\", false, function () {\n  return [useQuery, useLazyQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/xilxilx/projects/fullstack-kurssi/fullstack/osa8/library-frontend/src/App.js"],"names":["React","useEffect","useState","Authors","Books","NewBook","gql","useLazyQuery","useQuery","ALL_AUTHORS","ALL_BOOKS","App","result","getBooks","rresult","books","setBooks","page","setPage","showPage","content","boks","data","allBooks","console","log","loading","allAuthors"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,GAAT,EAAcC,YAAd,EAA4BC,QAA5B,QAA4C,gBAA5C;;AAEA,MAAMC,WAAW,GAAGH,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMI,SAAS,GAAGJ,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,MAAMK,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,MAAM,GAAGJ,QAAQ,CAACC,WAAD,CAAvB;AACA,QAAM,CAACI,QAAD,EAAWC,OAAX,IAAsBP,YAAY,CAACG,SAAD,CAAxC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC,CAHgB,CAIlB;AACA;AACA;;AACE,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,SAAD,CAAhC;;AAEA,QAAMiB,QAAQ,GAAIC,OAAD,IAAa;AAChC;AACA;AACA;AACIF,IAAAA,OAAO,CAACE,OAAD,CAAP;;AACA,QAAIH,IAAI,KAAK,OAAb,EAAsB;AACpB,YAAMI,IAAI,GAAGR,QAAQ,EAArB;AACAG,MAAAA,QAAQ,CAACK,IAAI,CAACP,OAAL,CAAaQ,IAAb,CAAkBC,QAAnB,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACD,KAT2B,CAUhC;;AACG,GAXD;;AAcAd,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBR,IAArB;AACH,GAFU,EAER,CAACA,IAAD,CAFQ,CAAT;AAIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,MAAIL,MAAM,CAACc,OAAX,EAAqB;AACnB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMP,QAAQ,CAAC,SAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,OAAD;AACE,MAAA,IAAI,EAAEF,IAAI,KAAK,SADjB;AAC4B,MAAA,OAAO,EAAEL,MAAM,CAACU,IAAP,CAAYK;AADjD;AAAA;AAAA;AAAA;AAAA,YAPF,eAWE,QAAC,KAAD,CACN;AADM;AAEE,MAAA,IAAI,EAAEV,IAAI,KAAK,OAFjB;AAE0B,MAAA,KAAK,EAAEF;AAFjC;AAAA;AAAA;AAAA;AAAA,YAXF,eAgBE,QAAC,OAAD;AACE,MAAA,IAAI,EAAEE,IAAI,KAAK;AADjB;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAnED;;GAAMN,G;UACWH,Q,EACaD,Y;;;KAFxBI,G;AAqEN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport { gql, useLazyQuery, useQuery } from '@apollo/client'\n\nconst ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      born \n      bookCount \n    }\n  }\n`\n\nconst ALL_BOOKS = gql`\n  query {\n    allBooks {\n      title \n      author \n      published \n    }\n  }\n`\n\nconst App = () => {\n  const result = useQuery(ALL_AUTHORS)\n  const [getBooks, rresult] = useLazyQuery(ALL_BOOKS)\n  const [books, setBooks] = useState(null)\n//  const [result, setResult] = useQuery(ALL_AUTHORS)\n//  const [getBooks, resu] = useLazyQuery(ALL_BOOKS)\n//  const [getBooks, books] = useLazyQuery(ALL_BOOKS)\n  const [page, setPage] = useState('authors')\n\n  const showPage = (content) => {\n//    console.log('in showPage')\n//    console.log('content:', content)\n//    console.log('resu.data3', resu.data)\n    setPage(content)\n    if (page === 'books') {\n      const boks = getBooks()\n      setBooks(boks.rresult.data.allBooks)\n      console.log(books)\n    }\n//    console.log('page:', page)\n  }\n\n\n  useEffect(() => {\n    console.log('page ', page)\n}, [page])\n\n/*    \n    if (resu.data) {\n      setBooks2(resu.data.allBooks)\n      console.log('books2', books2)\n    } \n    console.log('resu.data2', resu.data)\n    console.log('books22', books2)\n  }, [resu])\n\n  console.log('resu.data1', resu.data)\n  console.log('result.data', result.data)\n  */\n\n  if (result.loading)  {\n    return <div>loading...</div>\n  }\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => showPage('authors')}>authors</button>\n        <button onClick={() => showPage('books')}>books</button>\n        <button onClick={() => showPage('add')}>add book</button>\n      </div>\n\n      <Authors\n        show={page === 'authors'} authors={result.data.allAuthors}\n      />\n\n      <Books\n//        show={page === 'books'} books={books.data.allBooks}\n        show={page === 'books'} books={books}\n      />\n\n      <NewBook\n        show={page === 'add'}\n      />\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}