{"ast":null,"code":"var _jsxFileName = \"/home/xilxilx/projects/fullstack-kurssi/fullstack/osa8/library-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport { gql, useLazyQuery, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      born \n      bookCount \n    }\n  }\n`;\nconst ALL_BOOKS = gql`\n  query {\n    allBooks {\n      title \n      author \n      published \n    }\n  }\n`;\n\nconst App = () => {\n  _s();\n\n  const result = useQuery(ALL_AUTHORS);\n  const [getBooks, result2] = useLazyQuery(ALL_BOOKS);\n  const [books, setBooks] = useState(null);\n  const [page, setPage] = useState('authors');\n\n  const showPage = content => {\n    setPage(content);\n    getBooks(); //    console.log('result2', result2)\n\n    setBooks(result2.data.allBooks);\n  };\n\n  useEffect(() => {\n    /*   if (result2.data && page === 'books') {\n          setBooks(result.data.allBooks)\n          console.log(books)\n        }\n        \n        if (page === 'books') {\n          setBooks(result2.data.allBooks)\n          console.log(books)\n        }\n       */\n    if (result2.data) {\n      setBooks(result2.data.allBooks);\n    } //   console.log('data2', rresult.data)\n\n  }, [result2]);\n\n  if (result.loading || result2.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => showPage('authors'),\n        children: \"authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          getBooks();\n          showPage('books');\n        },\n        children: \"books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => showPage('add'),\n        children: \"add book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Authors, {\n      show: page === 'authors',\n      authors: result.data.allAuthors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Books //        show={page === 'books'} books={result2.data.allBooks}\n    , {\n      show: page === 'books',\n      books: books\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewBook, {\n      show: page === 'add'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getBooks(),\n      children: \" getbooks \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"AHeamft42F1yrt9YQW/M2rdigOo=\", false, function () {\n  return [useQuery, useLazyQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/xilxilx/projects/fullstack-kurssi/fullstack/osa8/library-frontend/src/App.js"],"names":["React","useEffect","useState","Authors","Books","NewBook","gql","useLazyQuery","useQuery","ALL_AUTHORS","ALL_BOOKS","App","result","getBooks","result2","books","setBooks","page","setPage","showPage","content","data","allBooks","loading","allAuthors"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,GAAT,EAAcC,YAAd,EAA4BC,QAA5B,QAA4C,gBAA5C;;AAEA,MAAMC,WAAW,GAAGH,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMI,SAAS,GAAGJ,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,MAAMK,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,MAAM,GAAGJ,QAAQ,CAACC,WAAD,CAAvB;AACA,QAAM,CAACI,QAAD,EAAWC,OAAX,IAAsBP,YAAY,CAACG,SAAD,CAAxC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,SAAD,CAAhC;;AAEA,QAAMiB,QAAQ,GAAIC,OAAD,IAAa;AAC5BF,IAAAA,OAAO,CAACE,OAAD,CAAP;AACAP,IAAAA,QAAQ,GAFoB,CAGhC;;AACIG,IAAAA,QAAQ,CAACF,OAAO,CAACO,IAAR,CAAaC,QAAd,CAAR;AACD,GALD;;AAOArB,EAAAA,SAAS,CAAC,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,QAAIa,OAAO,CAACO,IAAZ,EAAkB;AAChBL,MAAAA,QAAQ,CAACF,OAAO,CAACO,IAAR,CAAaC,QAAd,CAAR;AACD,KAba,CAelB;;AACC,GAhBU,EAgBR,CAACR,OAAD,CAhBQ,CAAT;;AAmBA,MAAIF,MAAM,CAACW,OAAP,IAAkBT,OAAO,CAACS,OAA9B,EAAwC;AACtC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMJ,QAAQ,CAAC,SAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAM;AAAEN,UAAAA,QAAQ;AAAIM,UAAAA,QAAQ,CAAC,OAAD,CAAR;AAAkB,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,OAAD;AACE,MAAA,IAAI,EAAEF,IAAI,KAAK,SADjB;AAC4B,MAAA,OAAO,EAAEL,MAAM,CAACS,IAAP,CAAYG;AADjD;AAAA;AAAA;AAAA;AAAA,YAPF,eAWE,QAAC,KAAD,CACN;AADM;AAEE,MAAA,IAAI,EAAEP,IAAI,KAAK,OAFjB;AAE0B,MAAA,KAAK,EAAEF;AAFjC;AAAA;AAAA;AAAA;AAAA,YAXF,eAgBE,QAAC,OAAD;AACE,MAAA,IAAI,EAAEE,IAAI,KAAK;AADjB;AAAA;AAAA;AAAA;AAAA,YAhBF,eAoBE;AAAQ,MAAA,OAAO,EAAE,MAAMJ,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA7DD;;GAAMF,G;UACWH,Q,EACaD,Y;;;KAFxBI,G;AA+DN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport { gql, useLazyQuery, useQuery } from '@apollo/client'\n\nconst ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      born \n      bookCount \n    }\n  }\n`\n\nconst ALL_BOOKS = gql`\n  query {\n    allBooks {\n      title \n      author \n      published \n    }\n  }\n`\n\nconst App = () => {\n  const result = useQuery(ALL_AUTHORS)\n  const [getBooks, result2] = useLazyQuery(ALL_BOOKS)\n  const [books, setBooks] = useState(null)\n  const [page, setPage] = useState('authors')\n\n  const showPage = (content) => {\n    setPage(content)\n    getBooks()\n//    console.log('result2', result2)\n    setBooks(result2.data.allBooks)\n  }\n\n  useEffect(() => {\n/*   if (result2.data && page === 'books') {\n      setBooks(result.data.allBooks)\n      console.log(books)\n    }\n    \n    if (page === 'books') {\n      setBooks(result2.data.allBooks)\n      console.log(books)\n    }\n   */ \n    if (result2.data) {\n      setBooks(result2.data.allBooks)\n    }\n\n//   console.log('data2', rresult.data)\n}, [result2])\n\n\n  if (result.loading || result2.loading)  {\n    return <div>loading...</div>\n  }\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => showPage('authors')}>authors</button>\n        <button onClick={() => { getBooks(); showPage('books')}}>books</button>\n        <button onClick={() => showPage('add')}>add book</button>\n      </div>\n\n      <Authors\n        show={page === 'authors'} authors={result.data.allAuthors}\n      />\n\n      <Books\n//        show={page === 'books'} books={result2.data.allBooks}\n        show={page === 'books'} books={books}\n      />\n\n      <NewBook\n        show={page === 'add'}\n      />\n\n      <button onClick={() => getBooks()}> getbooks </button>\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}