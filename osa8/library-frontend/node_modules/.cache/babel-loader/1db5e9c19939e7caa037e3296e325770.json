{"ast":null,"code":"var _jsxFileName = \"/home/xilxilx/projects/fullstack-kurssi/fullstack/osa8/library-frontend/src/components/NewBook.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useMutation } from '@apollo/client';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_BOOK = gql`\n    mutation createBook(\n      $title: String!, \n      $author: String!, \n      $published: Int!, \n      $genres: [String!]!) {\n      addBook(\n        title: $title,\n        author: $author,\n        published: $published,\n        genres: $genres\n      ) {\n        title\n        author\n        published\n        genres\n      }\n    }\n  `;\n\nconst NewBook = props => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [published, setPublished] = useState('');\n  const [genre, setGenre] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [createBook] = useMutation(CREATE_BOOK);\n  createBook({\n    variables: {\n      title,\n      author,\n      published,\n      genres\n    }\n  });\n\n  if (!props.show) {\n    return null;\n  }\n\n  const submit = async event => {\n    event.preventDefault();\n    console.log('add book...');\n    setTitle(title);\n    setPublished(published);\n    setAuthor(author);\n    setGenres(genres);\n    setGenre('');\n  };\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre));\n    setGenre('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"title\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: ({\n            target\n          }) => setTitle(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"author\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: author,\n          onChange: ({\n            target\n          }) => setAuthor(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"published\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: published,\n          onChange: ({\n            target\n          }) => setPublished(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: genre,\n          onChange: ({\n            target\n          }) => setGenre(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addGenre,\n          type: \"button\",\n          children: \"add genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"genres: \", genres.join(' ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"create book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewBook, \"bqRdS2Uel8kDMCnAzrnNg6q9jtg=\", false, function () {\n  return [useMutation];\n});\n\n_c = NewBook;\nexport default NewBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewBook\");","map":{"version":3,"sources":["/home/xilxilx/projects/fullstack-kurssi/fullstack/osa8/library-frontend/src/components/NewBook.js"],"names":["gql","useMutation","React","useState","CREATE_BOOK","NewBook","props","title","setTitle","author","setAuthor","published","setPublished","genre","setGenre","genres","setGenres","createBook","variables","show","submit","event","preventDefault","console","log","addGenre","concat","target","value","join"],"mappings":"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","sourcesContent":["import { gql, useMutation } from '@apollo/client'\nimport React, { useState } from 'react'\n\n  const CREATE_BOOK = gql`\n    mutation createBook(\n      $title: String!, \n      $author: String!, \n      $published: Int!, \n      $genres: [String!]!) {\n      addBook(\n        title: $title,\n        author: $author,\n        published: $published,\n        genres: $genres\n      ) {\n        title\n        author\n        published\n        genres\n      }\n    }\n  `\n\nconst NewBook = (props) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [published, setPublished] = useState('')\n  const [genre, setGenre] = useState('')\n  const [genres, setGenres] = useState([])\n\n  const [createBook] = useMutation(CREATE_BOOK)\n  createBook({ variables: { title, author, published, genres }})\n\n  if (!props.show) {\n    return null\n  }\n\n  const submit = async (event) => {\n    event.preventDefault()\n    \n    console.log('add book...')\n\n    setTitle(title)\n    setPublished(published)\n    setAuthor(author)\n    setGenres(genres)\n    setGenre('')\n  }\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre))\n    setGenre('')\n  }\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        <div>\n          title\n          <input\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author\n          <input\n            value={author}\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          published\n          <input\n            type='number'\n            value={published}\n            onChange={({ target }) => setPublished(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            value={genre}\n            onChange={({ target }) => setGenre(target.value)}\n          />\n          <button onClick={addGenre} type=\"button\">add genre</button>\n        </div>\n        <div>\n          genres: {genres.join(' ')}\n        </div>\n        <button type='submit'>create book</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewBook\n"]},"metadata":{},"sourceType":"module"}